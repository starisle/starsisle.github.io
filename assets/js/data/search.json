[ { "title": "UE4 相关宏解释", "url": "/posts/UE4-%E7%9B%B8%E5%85%B3%E5%AE%8F%E8%A7%A3%E9%87%8A/", "categories": "游戏开发", "tags": "UE4", "date": "2021-11-29 15:04:24 +0800", "snippet": "UPROPERTY 宏属性说明符可被添加到声明，以控制属性与引擎和编辑器诸多方面的相处方式。AdvancedDisplay属性将被放置在其出现的任意面板的高级（下拉）部分中。AssetRegistrySearchableAssetRegistrySearchable 说明符说明此属性与其值将被自动添加到将此包含为成员变量的所有资源类实例的资源注册表。不可在结构体属性或参数上使用。BlueprintAssignable只能与组播委托共用。公开属性在蓝图中指定。BlueprintAuthorityOnly此属性必须为一个组播委托。在蓝图中，其只接受带 BlueprintAuthorityOn..." }, { "title": "2021-11-11-UE4 Niagara 基础", "url": "/posts/Unreal-Engine-Niagara-%E5%9F%BA%E7%A1%80/", "categories": "Unreal Engine", "tags": "Unreal Engine", "date": "2021-11-11 16:08:01 +0800", "snippet": "" }, { "title": "UE4 插件", "url": "/posts/UE4-%E6%8F%92%E4%BB%B6/", "categories": "游戏开发", "tags": "UE4", "date": "2021-11-08 15:04:24 +0800", "snippet": "Electronic Nodes让蓝图看起来非常简洁。使其更加容易阅读。" }, { "title": "Unity 中使用 FairyGUI", "url": "/posts/Unity-%E4%B8%AD%E4%BD%BF%E7%94%A8-FairyGUI/", "categories": "游戏开发", "tags": "Unity", "date": "2021-11-08 00:31:45 +0800", "snippet": "# 加载UI包Unity项目载入UI包有以下几种方式，开发者可以根据项目需要选择其中一种或者多种方式混搭使用： 将打包后的文件直接发布到Unity的Resources目录或者其子目录下， 这种方式处理的UI包，如果使用UIPanel显示UI，不需要任何代码载入包，UIPanel会自动载入；如果是动态创建UI，则要使用代码载入包： //demo就是发布时填写的文件名 UIPackage.AddPackage(&quot;demo&quot;); //如果在子目录下 UIPackage.AddPackage(&quot;路径/demo&quot;);..." }, { "title": "Debian Ubuntu CentOS 网络重装一键脚本", "url": "/posts/Debian-Ubuntu-CentOS-%E7%BD%91%E7%BB%9C%E9%87%8D%E8%A3%85%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/", "categories": "服务器", "tags": "Linux", "date": "2021-07-15 19:02:33 +0800", "snippet": "wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;amp;&amp;amp; bash AutoReinstall.sh支持重装的系统 Ubuntu 18.04/16.04 Debian 9/10 CentOS 6 CentOS 7 （DD方式） 自定义DD镜像特性 / 优化 自动获取IP地址、网关、子网掩码 自动判断网络环境，选择国内/外镜像，解决速度慢的问题 懒人一键化，无需复杂的命令 解决萌咖脚本中一些导致安装错误的问题 CentOS 7 镜像..." }, { "title": "FairyGui 关联系统", "url": "/posts/FairyGui-%E5%85%B3%E8%81%94%E7%B3%BB%E7%BB%9F/", "categories": "游戏开发", "tags": "FairyGui, UI", "date": "2021-05-27 20:38:04 +0800", "snippet": "// 左-&amp;gt;左static Left_Left: number;// 左-&amp;gt;中static Left_Center: number;// 左-&amp;gt;右static Left_Right: number;// 左右居中static Center_Center: number;// 右-&amp;gt;左static Right_Left: number;// 右-&amp;gt;中static Right_Center: number;// 右-&amp;gt;右static Right_Right: number;// 顶-&amp;..." }, { "title": "FairyGui Events", "url": "/posts/FairyGui-Events/", "categories": "游戏开发", "tags": "FairyGui, UI", "date": "2021-05-26 20:25:42 +0800", "snippet": " Events.STATE_CHANGED=&quot;fui_state_changed&quot;; Events.XY_CHANGED=&quot;fui_xy_changed&quot;; Events.SIZE_CHANGED=&quot;fui_size_changed&quot;; Events.SIZE_DELAY_CHANGE=&quot;fui_size_delay_change&quot;; Events.CLICK_ITEM=&quot;fui_click_item&quot;; Events.SCROLL=&quot;fui_scroll&quot;; Even..." }, { "title": "FairyGui GList", "url": "/posts/FairyGui-GList/", "categories": "游戏开发", "tags": "FairyGui, UI", "date": "2021-05-25 20:25:42 +0800", "snippet": " removeChildren() //删除所有子级。 addItemFromPool() //添加项目到列表，与&quot;从池获取&quot;添加子项相同。 addChild(GObject child) //将子项添加到组件。它将在最前面的位置。 addChildAt(GObject child,int index) //将子项添加到组件指定位置。 selectNone() //删除选择。" }, { "title": "修改右键菜单", "url": "/posts/%E4%BF%AE%E6%94%B9%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/", "categories": "搞机", "tags": "Windows", "date": "2021-01-25 20:55:20 +0800", "snippet": "路径 计算机\\HKEY_CLASSES_ROOT*\\shell 计算机\\HKEY_CLASSES_ROOT\\Directory\\shell" }, { "title": "使用frp进行内网穿透远程连接桌面", "url": "/posts/%E4%BD%BF%E7%94%A8frp%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%A1%8C%E9%9D%A2/", "categories": "搞机", "tags": "Windows", "date": "2021-01-25 20:55:20 +0800", "snippet": "1. 原理使用frp之类的软件做反向代理来实现内网穿透，并且需要一台带公网IP的云服务器的。而且完全可控，想配置多少个端口的穿透都可以，速度和云服务器带宽有关。 为什么需要多个端口？ 因为不同场景下的端口不同，比如SSH是22端口，远程桌面rdp是3389端口，Web服务的话则80/443端口。2. 安装配置frpa. 云服务器端 下载适合服务器系统的frp软件：https://github.com/fatedier/frp/releases 我选择的是 frp_0.35.1_linux_amd64.tar.gz tar -zxvf frp_0.35.1_..." }, { "title": "MacOS下 Png 转 Icns 格式图标", "url": "/posts/MacOS%E4%B8%8BPng%E8%BD%ACIcns%E6%A0%BC%E5%BC%8F%E5%9B%BE%E6%A0%87/", "categories": "搞机", "tags": "Mac", "date": "2020-12-24 12:12:20 +0800", "snippet": "第一步准备一张1024*1024的png图，然后打开终端进入图片所在的文件夹执行创建一个 png.iconset 的文件夹（手动创建也可以） mkdir png.iconset第二步执行命令 sips -z 16 16 name.png --out png.iconset/icon_16x16.png sips -z 16 16 name.png --out png.iconset/icon_16x16.png sips -z 32 32 name.png --out png.iconset/icon_16x16@2x.png sips -z 32 32 n..." }, { "title": "修改CentOs7的ip地址", "url": "/posts/%E4%BF%AE%E6%94%B9CentOs7%E7%9A%84ip%E5%9C%B0%E5%9D%80/", "categories": "服务器", "tags": "Linux", "date": "2020-07-18 15:27:12 +0800", "snippet": "在配置网络之前我们先要知道centos的网卡名称是什么，centos7不再使用ifconfig命令，可通过命令 IP addr 查看，网卡名为 ens32centos7 获取IP地址的方法主要有两种， 动态获取ip； (前提是你的路由器已经开启了DHCP) 修改网卡配置文件 vi /etc/sysconfig/network-scripts/ifcfg-ens32 (最后一个为网卡名称) 动态获取IP地址需要修改两处地方即可 （1）bootproto=dhcp （2）onboot=yes ..." }, { "title": "Ubuntu安装配置mysql", "url": "/posts/Ubuntu%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEmysql/", "categories": "服务器", "tags": "Linux, Mysql", "date": "2020-07-16 15:07:42 +0800", "snippet": "Ubuntu安装配置mysqlsudo apt-get install mysql-server mysql-client测试是否安装成功sudo netstat -tap | grep mysql相关操作 登录 mysql -uroot -p 重启MySQL服务器sudo /etc/init.d/mysql restart 检查MySQL服务器占用端口 netstat -nlt|grep 3306 检查MySQL服务器系统进程 ps -aux|grep mysql 查看数据库的字符集编码 show variables like &#39;%char%&#39;; 展示一些关..." }, { "title": "Linux 一键测速脚本", "url": "/posts/%E4%B8%80%E9%94%AE%E6%B5%8B%E9%80%9F%E8%84%9A%E6%9C%AC/", "categories": "服务器", "tags": "Linux", "date": "2020-07-14 13:14:20 +0800", "snippet": "脚本一一键脚本wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash或者curl -Lso- -no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash显示内容如下CPU Model : QEMU Virtual CPU version 2.5+CPU Cores : 2 Cores..." }, { "title": "Trojan,Xray一键脚本", "url": "/posts/Trojan,Xray%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/", "categories": "服务器", "tags": "Tool", "date": "2020-05-20 19:20:00 +0800", "snippet": "Trojan 一键脚本bash &amp;lt;(curl -sL https://s.hijk.art/trojan.sh)Xray 一键脚本bash &amp;lt;(curl -sL https://s.hijk.art/xray.sh)" }, { "title": "鸡汤", "url": "/posts/%E9%B8%A1%E6%B1%A4/", "categories": "生活", "tags": "心灵鸡汤", "date": "2020-05-20 13:14:20 +0800", "snippet": " Take nothing for granted. Know that the harder you work, the luckier you&#39;ll get. 没有事情是理所当然，要知道越努力越幸运。 The supreme happiness of life is the conviction that we are loved. 生活中最大的幸福是坚信有人爱我们。 Nothing in life is to be feared. It is only to be understood. 生活中没有可怕的东西，只有应去了解的东西。 ..." }, { "title": "Mac硬盘的简单急救", "url": "/posts/Mac%E6%9C%BA%E6%A2%B0%E7%A1%AC%E7%9B%98%E6%80%A5%E6%95%91/", "categories": "搞机", "tags": "Mac", "date": "2020-05-20 11:14:10 +0800", "snippet": "移动机械硬盘由于错误插拔而导致Mac无法识别的简单急救，修复1.首先插入自己的硬盘，然后找到mac的磁盘工具2.打开磁盘工具，发现自己的磁盘分区在卸载状态；点击无法成功装载。3.打开「终端」，输入「diskutil list」 查看自己宗卷名字p.s.这一步不起作用，就是确认一下磁盘是不是能被识别到。 4.输入：「ps aux grep fsck」回车 5.输入：「sudo pkill -f fsck」回车6.输入密码（密码输入时不可见，输完按回车）7.这时候你会欣喜的发现硬盘读出来了，但不要开心的太早，这时候你的硬盘是「只读」的。（如果你第一步..." }, { "title": "Mac 查睡眠", "url": "/posts/Mac-%E6%9F%A5%E7%9D%A1%E7%9C%A0/", "categories": "搞机", "tags": "Mac, 黑苹果", "date": "2020-05-17 15:07:42 +0800", "snippet": "查睡眠log show --last 1d | grep &quot;Wake reason&quot;- `OHC`：表示开放式主机控制器（Open Host Controller），它通常和USB或火线有关，如果你看到的是OHC1或OHC2则基本上是USB外接键盘或鼠标导致唤醒了您的Mac。- `EHC`：表示增强的主机控制器（Enhanced Host Controller），这是另一种USB接口，但也可以是无线或蓝牙设备，因为它们均隶属于Mac的USB总线。（新版系统好像全部由XHC取代OHC和EHC了，不再细分，求证实）- `USB`：一个USB设备唤醒了Mac。- `LID0..." }, { "title": "node、npm 的安装和卸载", "url": "/posts/node-npm-%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%8D%B8%E8%BD%BD/", "categories": "开发", "tags": "NodeJS", "date": "2020-04-20 15:37:22 +0800", "snippet": "1.node 和 npm 卸载不干净 [[apt-get]] 卸载 sudo apt-get remove --purge npm sudo apt-get remove --purge nodejs sudo apt-get remove --purge nodejs-legacy sudo apt-get autoremove #手动删除 npm 相关目录 rm -r /usr/local/bin/npm rm -r /usr/local/lib/node-moudels find / -name npm rm -r /tm..." }, { "title": "设置npm的registry", "url": "/posts/%E8%AE%BE%E7%BD%AEnpm%E7%9A%84registry/", "categories": "开发", "tags": "NodeJS", "date": "2020-04-20 15:07:42 +0800", "snippet": "1 原npm地址npm config set registry http://registry.npmjs.org2 设置国内镜像通过 Config 命令npm config set registry https://registry.npm.taobao.org npm info underscore命令行指定npm --registry https://registry.npm.taobao.org info underscore" }, { "title": "解决npm一直停在node .download-chromedriver.js的问题", "url": "/posts/%E8%A7%A3%E5%86%B3npm%E4%B8%80%E7%9B%B4%E5%81%9C%E5%9C%A8node-.download-chromedriver.js%E7%9A%84%E9%97%AE%E9%A2%98/", "categories": "开发", "tags": "NodeJS", "date": "2020-04-19 01:00:26 +0800", "snippet": "运行状态，一直卡在这个状态不动&amp;gt; electron-chromedriver@1.8.0 install /home/pi/MagicMirror/node_modules/electron-chromedriver&amp;gt; node ./download-chromedriver.js12解决方法npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver" }, { "title": "修改右键菜单", "url": "/posts/%E6%89%8B%E5%8A%A8%E4%B8%BAHyper-V%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%B7%BB%E5%8A%A0RemoteFX%E6%98%BE%E5%8D%A1/", "categories": "搞机", "tags": "Windows, 虚拟机", "date": "2020-03-17 15:07:42 +0800", "snippet": "前言Hyper-V是微软家的虚拟机平台，RemoteFX是应用于Hyper-V虚拟机的显卡虚拟化技术。但是自 Win10 1809 以后，微软放弃了 RemoteFX，使用自带管理器无法创建RemoteFx显卡了。但是使用命令还是可以正常使用的。1.检查显卡可用性用管理员身份打开PowerShewll![[image-20200506152514125.png]]示例输出![[image-20200506152551011.png]]如果CompatibleForVirtualization为False则代表该显卡不支持RemoteFX，可以洗洗睡了开启显卡支持Enable-VMRemo..." }, { "title": "JS 正则表达式", "url": "/posts/JS-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/", "categories": "开发", "tags": "JavaScript", "date": "2020-01-09 23:56:29 +0800", "snippet": "元字符 元字符 说明 . 匹配除换行符以外的任意字符 \\w 匹配字母或数字或下划线或汉字 \\s 匹配任意的空白符 \\d 匹配数字 \\b 匹配单词的开始或结束 ^ 匹配字符串的开始 $ 匹配字符串的结束 匹配有 abc 开头的字符串: ^abc 或者\\babc ..." }, { "title": "JS 随机数", "url": "/posts/JS-%E9%9A%8F%E6%9C%BA%E6%95%B0/", "categories": "开发", "tags": "JavaScript", "date": "2020-01-09 22:50:29 +0800", "snippet": " Math.ceil(); //向上取整。 Math.floor(); //向下取整。 Math.round(); //四舍五入。 Math.random(); //0.0 ~ 1.0 之间的一个伪随机数。【包含0不包含1】 //比如0.8647578968666494 Math.ceil(Math.random()*10); // 获取从1到10的随机整数 ，取0的概率极小。 Math.round(Math.random()); //可均衡获取0到1的随机..." }, { "title": "JS 排序 Sort", "url": "/posts/JS-%E6%8E%92%E5%BA%8FSort/", "categories": "开发", "tags": "JavaScript", "date": "2020-01-09 22:30:29 +0800", "snippet": "arrayObject.sort(sortby)function sortNumber(a,b){ return a - b}var arr = new Array(6)arr[0] = &quot;10&quot;arr[1] = &quot;5&quot;arr[2] = &quot;40&quot;arr[3] = &quot;25&quot;arr[4] = &quot;1000&quot;arr[5] = &quot;1&quot;document.write(arr + &quot;&amp;lt;br /&amp;gt;&quot;)document.write(ar..." }, { "title": "获取目录下所有文件路径", "url": "/posts/%E8%8E%B7%E5%8F%96%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "# -*- coding: utf-8 -*-import osdef all_files_path(rootDir): for root, dirs, files in os.walk(rootDir): # 分别代表根目录、文件夹、文件 for file in files: # 遍历文件 file_path = os.path.join(root, file) # 获取文件绝对路径 file_path = file_path.replace(&quot;\\\\..." }, { "title": "相对路径和绝对路径", "url": "/posts/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%92%8C%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "相对路径和绝对路径针对windows open(&#39;aaa.txt&#39;) open(&#39;/data/bbb.txt&#39;) open(&#39;D:\\\\user\\\\ccc.txt&#39;)这三种表达式里面，前两个都是相对路径，第三个则是绝对路径。绝对路径比较好理解，就是最完整的路径，相对路径的相对则是不完整路径，这个相对指的就是相对于当前文件夹路径，其实就是你编写的这个py文件所放的文件夹路径！也就是说你写的相对路径必须是当前文件夹A里的文件a或者A里的文件夹B里的文件才可以open。假设当前的py文件夹所处的位置是：D:\\user\\public..." }, { "title": "文件与异常", "url": "/posts/%E6%96%87%E4%BB%B6%E4%B8%8E%E5%BC%82%E5%B8%B8/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "文件与异常 操作模式 具体含义 &#39;r&#39; 读取 （默认） &#39;w&#39; 写入（会先截断之前的内容） &#39;x&#39; 写入，如果文件已经存在会产生异常 &#39;a&#39; 追加，将内容写入到已有文件的末尾 &#39;b&#39; 二进制模式 &#39;t&#39; 文本模式（默认） ..." }, { "title": "字符串", "url": "/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "字符串 # mystr.find(str, start=0, end=len(mystr)) 检测 str 是否包含在 mystr中，如果是返回开始的索引值，否则返回-1 # mystr.index(str, start=0, end=len(mystr)) 跟find()方法一样，只不过如果str不在 mystr中会报一个异常. # mystr.count(str, start=0, end=len(mystr)) 返回 str在start和end之间 在 mystr里面出现的次数 # mystr.replace(str1, str2, myst..." }, { "title": "if进阶", "url": "/posts/if%E8%BF%9B%E9%98%B6/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "python 中if-else的多种简洁的写法 a, b, c = 1, 2, 3 if a&amp;gt;b: c = a else: c = b #可以写成 c = a if a &amp;gt; b else b二维列表 c = [b,a][True] # c = b c = [b,a][False] # c = a逻辑运算符 c = (a &amp;gt; b and [a] or [b])[0] # 改写成 c = (a &amp;gt; b and a or b)利用and 的特点..." }, { "title": "Python enumerate() 函数", "url": "/posts/Python-enumerate()-%E5%87%BD%E6%95%B0/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "Python enumerate() 函数描述 enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。语法 enumerate(sequence, [start=0])参数 sequence – 一个序列、迭代器或其他支持迭代对象。 start – 下标起始位置。返回值 返回 enumerate(枚举) 对象。for循环: i = 0 seq = [&#39;one&#39;, &#39;two&#39;, &#39;three&#39;] for element ..." }, { "title": "Python OS", "url": "/posts/Python-OS/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "使用 os.path.splitext(file)[0] 可获得 文件名 。 使用 os.path.splitext(file)[-1] 可获得以 . 开头的 文件后缀名 。import osfile = &quot;Hello.py&quot;# 获取前缀（文件名称）assert os.path.splitext(file)[0] == &quot;Hello&quot;# 获取后缀（文件类型）assert os.path.splitext(file)[-1] == &quot;.py&quot;assert os.path.splitext(file)[-1][1:] == &quo..." }, { "title": "Json中文显示问题", "url": "/posts/Json%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/", "categories": "开发", "tags": "Python", "date": "2020-01-09 19:52:03 +0800", "snippet": "json中文显示异常post请求数据时，响应的内容是json数据，但是返回的json数据中文显示有问题，变成  \\uXXX 的形式。这是因为中文以 unicode 编码了，而默认是以ASCII解析的，中文不在ASCII编码中，所以无法显示。这时候我们可以用 “import json” 然后调用“json.loads()”和“json.dumps()”来使中文正确显示。具体怎么做呢？用下面的代码即可实现（data是中文不能正常显示的json串，newJson 是处理后中文正常显示的字符串）import jsonmyJson=json.loads(data) [[data]]是向 api请求..." }, { "title": "Unity &#39;Rigidbody&#39;移动和&#39;Charactercontroller&#39;移动区别", "url": "/posts/Unity-'Rigidbody'%E7%A7%BB%E5%8A%A8%E5%92%8C'Charactercontroller'%E7%A7%BB%E5%8A%A8%E5%8C%BA%E5%88%AB/", "categories": "游戏开发", "tags": "Unity", "date": "2019-12-11 22:35:21 +0800", "snippet": "物体碰撞的条件 两个物体都必须带有碰撞器（Collider),其中一个必须带有刚体（Rigidbody) 或者 “Charactercontroller” 组件. 检测碰撞发生的方式，利用 碰撞器（Collider) 或者 触发器(Trigger) 触发器只需要在碰撞器组件中勾选 IsTrigger 属性触发信息检测 1. MonoBehaviour.OnTriggerEnter(Collider collider) 当进入触发器 2. MonoBehaviour.OnTriggerExit(Collider collider) 当退出触发器 3. Mono..." }, { "title": "Unity Animator 组件", "url": "/posts/Unity-Animator-%E7%BB%84%E4%BB%B6/", "categories": "游戏开发", "tags": "Unity", "date": "2019-12-11 10:46:17 +0800", "snippet": " Controller：使用的 Animator Controller 文件。 Avatar：使用的骨骼文件。 Apply Root Motion：绑定该组件的 GameObject 的位置是否可以由动画进行改变（如果存在改变位移的动画）。 Update Mode：更新模式：Normal 表示使用 Update 进行更新，Animate Physics 表示使用 FixUpdate 进行更新（一般用在和物体有交互的情况下），Unscale Time 表示无视 timeScale 进行更新（一般用在 UI 动画中）。 Culling Mode：剔除模式： Alw..." }, { "title": "unity PackageManager无法直接搜索的包", "url": "/posts/unity-PackageManager%E6%97%A0%E6%B3%95%E7%9B%B4%E6%8E%A5%E6%90%9C%E7%B4%A2%E7%9A%84%E5%8C%85/", "categories": "游戏开发", "tags": "Unity", "date": "2019-12-08 15:34:56 +0800", "snippet": "1、打开package manager2、在左上角＋号图标选择Add package from git URL3、在输入框中输入包名手动添加。com.ptc.vuforia.enginecom.unity.2d.entitiescom.unity.ai.plannercom.unity.aovrecordercom.unity.assetbundlebrowsercom.unity.assetgraphcom.unity.barracudacom.unity.barracuda.burstcom.unity.build-report-inspectorcom.unity.cloud.us..." }, { "title": "Unity3D各平台Application.xxxPath的路径", "url": "/posts/Unity3D%E5%90%84%E5%B9%B3%E5%8F%B0Application.xxxPath%E7%9A%84%E8%B7%AF%E5%BE%84/", "categories": "游戏开发", "tags": "Unity", "date": "2019-12-05 00:35:40 +0800", "snippet": "常用的是以下四个路径：Application.dataPath Application.streamingAssetsPath Application.persistentDataPath Application.temporaryCachePathiOS:     Application.dataPath /var/containers/Bundle/Application/app sandbox/xxx.app/Data Application.streamingAssetsP..." } ]
